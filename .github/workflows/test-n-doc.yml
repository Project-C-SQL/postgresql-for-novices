on:
  push:
    #branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.10.7

      # "-0" allows invalidating the cache for upgrading Poetry
      - name: cache poetry install
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-1.2.2-0

      # `virtualenvs-in-project: true` creates a `.venv` in test dir for easy caching
      - uses: snok/install-poetry@v1
        with:
          version: 1.2.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: cache deps
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}

      # install, caching all sans this project
      - run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'
      - run: poetry install --no-interaction

      # pytest config is in `pyproject.toml`
      - run: poetry run pytest

      # generate docs
      - run: poetry run sphinx-build -b html src build
        if: github.event_name == 'push'
